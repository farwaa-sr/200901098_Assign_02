# -*- coding: utf-8 -*-
"""Welcome To Colaboratory

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/notebooks/intro.ipynb
"""

import re
import ast
#tokenization module
def lexical(expression):
  # using regular expression
  t_pattern = r'\d+|[a-zA-Z]+|[^\s\d\w]'
  
  #using re library to tokenize
  tokens = re.findall(t_pattern, expression)
  #list of tokens return
  return tokens

exp = 'r*(y*q)+b=*c+d'
tokens = lexical(exp)
print(tokens)  
print("\n")

#syntax tree generator module
tree=ast.parse("print('r*(y*q)+b=*c+d')")
print("\n")
print(ast.dump (tree)) 
exec(compile(tree, filename="",mode="exec"))